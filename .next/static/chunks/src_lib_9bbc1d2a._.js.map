{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/api.ts"],"sourcesContent":["import {\n  ApiResponse,\n  AuthResponse,\n  CartResponse,\n  ChatResponse,\n  ChatHistoryResponse,\n  CartOptimizationResponse,\n  UploadResponse,\n  QuizResponse,\n  CartItem\n} from \"./types\"\n\nconst API_BASE_URL = \"/api\"\n\nexport async function fetchApi<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<ApiResponse<T>> {\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      ...options,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...options.headers,\n      },\n    })\n\n    const data = await response.json()\n\n    if (!response.ok) {\n      throw new Error(data.error || \"An error occurred\")\n    }\n\n    return {\n      success: true,\n      data: data as T,\n    }\n  } catch (error) {\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : \"An error occurred\",\n    }\n  }\n}\n\n// Auth API\nexport const authApi = {\n  login: async (email: string, password: string) => {\n    return fetchApi<AuthResponse>(\"/auth\", {\n      method: \"POST\",\n      body: JSON.stringify({ email, password }),\n    })\n  },\n}\n\n// Recommendations API\nexport const recommendationsApi = {\n  getRecommendations: async (filters?: Record<string, string>) => {\n    const queryString = filters\n      ? `?${new URLSearchParams(filters).toString()}`\n      : \"\"\n    return fetchApi<CartResponse>(`/recommendations${queryString}`)\n  },\n\n  getPersonalized: async (preferences: any) => {\n    return fetchApi<CartResponse>(\"/recommendations\", {\n      method: \"POST\",\n      body: JSON.stringify({ userPreferences: preferences }),\n    })\n  },\n}\n\n// Chat API\nexport const chatApi = {\n  sendMessage: async (message: string, context?: any) => {\n    return fetchApi<ChatResponse>(\"/chat\", {\n      method: \"POST\",\n      body: JSON.stringify({ message, context }),\n    })\n  },\n\n  getHistory: async () => {\n    return fetchApi<ChatHistoryResponse>(\"/chat\")\n  },\n}\n\n// Cart API\nexport const cartApi = {\n  getCart: async () => {\n    return fetchApi<CartResponse>(\"/cart\")\n  },\n\n  updateCart: async (action: string, itemId: string, quantity?: number) => {\n    return fetchApi<CartResponse>(\"/cart\", {\n      method: \"POST\",\n      body: JSON.stringify({ action, itemId, quantity }),\n    })\n  },\n\n  optimizeCart: async (cart: CartItem[]) => {\n    return fetchApi<CartOptimizationResponse>(\"/cart\", {\n      method: \"PUT\",\n      body: JSON.stringify({ cart }),\n    })\n  },\n}\n\n// Upload API\nexport const uploadApi = {\n  uploadImage: async (file: File) => {\n    const formData = new FormData()\n    formData.append(\"image\", file)\n\n    return fetchApi<UploadResponse>(\"/upload\", {\n      method: \"POST\",\n      body: formData,\n      headers: {}, // Let browser set content-type for FormData\n    })\n  },\n}\n\n// Quiz API\nexport const quizApi = {\n  submitQuiz: async (answers: Record<string, any>) => {\n    return fetchApi<QuizResponse>(\"/quiz\", {\n      method: \"POST\",\n      body: JSON.stringify({ answers }),\n    })\n  },\n}\n"],"names":[],"mappings":";;;;;;;;;AAYA,MAAM,eAAe;AAEd,eAAe,SACpB,QAAgB,EAChB,UAAuB,CAAC,CAAC;IAEzB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,eAAe,UAAU,EAAE;YACzD,GAAG,OAAO;YACV,SAAS;gBACP,gBAAgB;gBAChB,GAAG,QAAQ,OAAO;YACpB;QACF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;QAChC;QAEA,OAAO;YACL,SAAS;YACT,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,OAAO;YACL,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;AAGO,MAAM,UAAU;IACrB,OAAO,OAAO,OAAe;QAC3B,OAAO,SAAuB,SAAS;YACrC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;IACF;AACF;AAGO,MAAM,qBAAqB;IAChC,oBAAoB,OAAO;QACzB,MAAM,cAAc,UAChB,CAAC,CAAC,EAAE,IAAI,gBAAgB,SAAS,QAAQ,IAAI,GAC7C;QACJ,OAAO,SAAuB,CAAC,gBAAgB,EAAE,aAAa;IAChE;IAEA,iBAAiB,OAAO;QACtB,OAAO,SAAuB,oBAAoB;YAChD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE,iBAAiB;YAAY;QACtD;IACF;AACF;AAGO,MAAM,UAAU;IACrB,aAAa,OAAO,SAAiB;QACnC,OAAO,SAAuB,SAAS;YACrC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAS;YAAQ;QAC1C;IACF;IAEA,YAAY;QACV,OAAO,SAA8B;IACvC;AACF;AAGO,MAAM,UAAU;IACrB,SAAS;QACP,OAAO,SAAuB;IAChC;IAEA,YAAY,OAAO,QAAgB,QAAgB;QACjD,OAAO,SAAuB,SAAS;YACrC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAQ;gBAAQ;YAAS;QAClD;IACF;IAEA,cAAc,OAAO;QACnB,OAAO,SAAmC,SAAS;YACjD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAK;QAC9B;IACF;AACF;AAGO,MAAM,YAAY;IACvB,aAAa,OAAO;QAClB,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,SAAS;QAEzB,OAAO,SAAyB,WAAW;YACzC,QAAQ;YACR,MAAM;YACN,SAAS,CAAC;QACZ;IACF;AACF;AAGO,MAAM,UAAU;IACrB,YAAY,OAAO;QACjB,OAAO,SAAuB,SAAS;YACrC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAQ;QACjC;IACF;AACF","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/context/AppContext.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { createContext, useContext, useReducer, useEffect } from \"react\"\nimport { cartApi, authApi } from \"../api\"\nimport { User, CartItem, CartResponse } from \"../types\"\n\ninterface AppState {\n  user: User | null\n  cart: CartItem[]\n  loading: boolean\n  error: string | null\n}\n\ntype AppAction =\n  | { type: \"SET_USER\"; payload: User | null }\n  | { type: \"SET_CART\"; payload: CartItem[] }\n  | { type: \"SET_LOADING\"; payload: boolean }\n  | { type: \"SET_ERROR\"; payload: string | null }\n  | { type: \"ADD_TO_CART\"; payload: CartItem }\n  | { type: \"REMOVE_FROM_CART\"; payload: string }\n  | { type: \"UPDATE_CART_ITEM\"; payload: { id: string; quantity: number } }\n\nconst initialState: AppState = {\n  user: null,\n  cart: [],\n  loading: false,\n  error: null,\n}\n\ninterface AppContextType {\n  state: AppState\n  dispatch: React.Dispatch<AppAction>\n  login: (email: string, password: string) => Promise<void>\n  logout: () => void\n  addToCart: (item: CartItem) => Promise<void>\n  removeFromCart: (itemId: string) => Promise<void>\n  updateCartItem: (itemId: string, quantity: number) => Promise<void>\n}\n\nconst AppContext = createContext<AppContextType | null>(null)\n\nfunction appReducer(state: AppState, action: AppAction): AppState {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state, user: action.payload }\n    case \"SET_CART\":\n      return { ...state, cart: action.payload }\n    case \"SET_LOADING\":\n      return { ...state, loading: action.payload }\n    case \"SET_ERROR\":\n      return { ...state, error: action.payload }\n    case \"ADD_TO_CART\":\n      return {\n        ...state,\n        cart: [...state.cart, action.payload],\n      }\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        cart: state.cart.filter((item) => item.id !== action.payload),\n      }\n    case \"UPDATE_CART_ITEM\":\n      return {\n        ...state,\n        cart: state.cart.map((item) =>\n          item.id === action.payload.id\n            ? { ...item, quantity: action.payload.quantity }\n            : item\n        ),\n      }\n    default:\n      return state\n  }\n}\n\nexport function AppProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(appReducer, initialState)\n\n  // Load initial cart data\n  useEffect(() => {\n    async function loadCart() {\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true })\n        const response = await cartApi.getCart()\n        if (response.success && response.data) {\n          dispatch({ type: \"SET_CART\", payload: response.data.cart })\n        }\n      } catch (error) {\n        dispatch({\n          type: \"SET_ERROR\",\n          payload: \"Failed to load cart\",\n        })\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false })\n      }\n    }\n\n    if (state.user) {\n      loadCart()\n    }\n  }, [state.user])\n\n  const login = async (email: string, password: string) => {\n    try {\n      dispatch({ type: \"SET_LOADING\", payload: true })\n      const response = await authApi.login(email, password)\n      if (response.success && response.data) {\n        dispatch({ type: \"SET_USER\", payload: response.data.user })\n      } else {\n        throw new Error(response.error || \"Login failed\")\n      }\n    } catch (error) {\n      dispatch({\n        type: \"SET_ERROR\",\n        payload: error instanceof Error ? error.message : \"Login failed\",\n      })\n    } finally {\n      dispatch({ type: \"SET_LOADING\", payload: false })\n    }\n  }\n\n  const logout = () => {\n    dispatch({ type: \"SET_USER\", payload: null })\n    dispatch({ type: \"SET_CART\", payload: [] })\n  }\n\n  const addToCart = async (item: CartItem) => {\n    try {\n      dispatch({ type: \"SET_LOADING\", payload: true })\n      const response = await cartApi.updateCart(\"add\", item.id)\n      if (response.success && response.data) {\n        dispatch({ type: \"ADD_TO_CART\", payload: item })\n      } else {\n        throw new Error(response.error || \"Failed to add item to cart\")\n      }\n    } catch (error) {\n      dispatch({\n        type: \"SET_ERROR\",\n        payload: error instanceof Error ? error.message : \"Failed to add item\",\n      })\n    } finally {\n      dispatch({ type: \"SET_LOADING\", payload: false })\n    }\n  }\n\n  const removeFromCart = async (itemId: string) => {\n    try {\n      dispatch({ type: \"SET_LOADING\", payload: true })\n      const response = await cartApi.updateCart(\"remove\", itemId)\n      if (response.success && response.data) {\n        dispatch({ type: \"REMOVE_FROM_CART\", payload: itemId })\n      } else {\n        throw new Error(response.error || \"Failed to remove item from cart\")\n      }\n    } catch (error) {\n      dispatch({\n        type: \"SET_ERROR\",\n        payload: error instanceof Error ? error.message : \"Failed to remove item\",\n      })\n    } finally {\n      dispatch({ type: \"SET_LOADING\", payload: false })\n    }\n  }\n\n  const updateCartItem = async (itemId: string, quantity: number) => {\n    try {\n      dispatch({ type: \"SET_LOADING\", payload: true })\n      const response = await cartApi.updateCart(\"update\", itemId, quantity)\n      if (response.success && response.data) {\n        dispatch({\n          type: \"UPDATE_CART_ITEM\",\n          payload: { id: itemId, quantity },\n        })\n      } else {\n        throw new Error(response.error || \"Failed to update cart item\")\n      }\n    } catch (error) {\n      dispatch({\n        type: \"SET_ERROR\",\n        payload: error instanceof Error ? error.message : \"Failed to update item\",\n      })\n    } finally {\n      dispatch({ type: \"SET_LOADING\", payload: false })\n    }\n  }\n\n  const contextValue: AppContextType = {\n    state,\n    dispatch,\n    login,\n    logout,\n    addToCart,\n    removeFromCart,\n    updateCartItem,\n  }\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport function useApp() {\n  const context = useContext(AppContext)\n  if (!context) {\n    throw new Error(\"useApp must be used within an AppProvider\")\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAsBA,MAAM,eAAyB;IAC7B,MAAM;IACN,MAAM,EAAE;IACR,SAAS;IACT,OAAO;AACT;AAYA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAyB;AAExD,SAAS,WAAW,KAAe,EAAE,MAAiB;IACpD,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,OAAO,OAAO;YAAC;QAC1C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,OAAO,OAAO;YAAC;QAC1C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,SAAS,OAAO,OAAO;YAAC;QAC7C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,OAAO,OAAO,OAAO;YAAC;QAC3C,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM;uBAAI,MAAM,IAAI;oBAAE,OAAO,OAAO;iBAAC;YACvC;QACF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,OAAO,OAAO;YAC9D;QACF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,OACpB,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE,GACzB;wBAAE,GAAG,IAAI;wBAAE,UAAU,OAAO,OAAO,CAAC,QAAQ;oBAAC,IAC7C;YAER;QACF;YACE,OAAO;IACX;AACF;AAEO,SAAS,YAAY,EAAE,QAAQ,EAAiC;;IACrE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,YAAY;IAEjD,yBAAyB;IACzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,eAAe;gBACb,IAAI;oBACF,SAAS;wBAAE,MAAM;wBAAe,SAAS;oBAAK;oBAC9C,MAAM,WAAW,MAAM,oHAAA,CAAA,UAAO,CAAC,OAAO;oBACtC,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;wBACrC,SAAS;4BAAE,MAAM;4BAAY,SAAS,SAAS,IAAI,CAAC,IAAI;wBAAC;oBAC3D;gBACF,EAAE,OAAO,OAAO;oBACd,SAAS;wBACP,MAAM;wBACN,SAAS;oBACX;gBACF,SAAU;oBACR,SAAS;wBAAE,MAAM;wBAAe,SAAS;oBAAM;gBACjD;YACF;YAEA,IAAI,MAAM,IAAI,EAAE;gBACd;YACF;QACF;gCAAG;QAAC,MAAM,IAAI;KAAC;IAEf,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,WAAW,MAAM,oHAAA,CAAA,UAAO,CAAC,KAAK,CAAC,OAAO;YAC5C,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;gBACrC,SAAS;oBAAE,MAAM;oBAAY,SAAS,SAAS,IAAI,CAAC,IAAI;gBAAC;YAC3D,OAAO;gBACL,MAAM,IAAI,MAAM,SAAS,KAAK,IAAI;YACpC;QACF,EAAE,OAAO,OAAO;YACd,SAAS;gBACP,MAAM;gBACN,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACpD;QACF,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,MAAM,SAAS;QACb,SAAS;YAAE,MAAM;YAAY,SAAS;QAAK;QAC3C,SAAS;YAAE,MAAM;YAAY,SAAS,EAAE;QAAC;IAC3C;IAEA,MAAM,YAAY,OAAO;QACvB,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,WAAW,MAAM,oHAAA,CAAA,UAAO,CAAC,UAAU,CAAC,OAAO,KAAK,EAAE;YACxD,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;gBACrC,SAAS;oBAAE,MAAM;oBAAe,SAAS;gBAAK;YAChD,OAAO;gBACL,MAAM,IAAI,MAAM,SAAS,KAAK,IAAI;YACpC;QACF,EAAE,OAAO,OAAO;YACd,SAAS;gBACP,MAAM;gBACN,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACpD;QACF,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,WAAW,MAAM,oHAAA,CAAA,UAAO,CAAC,UAAU,CAAC,UAAU;YACpD,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;gBACrC,SAAS;oBAAE,MAAM;oBAAoB,SAAS;gBAAO;YACvD,OAAO;gBACL,MAAM,IAAI,MAAM,SAAS,KAAK,IAAI;YACpC;QACF,EAAE,OAAO,OAAO;YACd,SAAS;gBACP,MAAM;gBACN,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACpD;QACF,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,MAAM,iBAAiB,OAAO,QAAgB;QAC5C,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,WAAW,MAAM,oHAAA,CAAA,UAAO,CAAC,UAAU,CAAC,UAAU,QAAQ;YAC5D,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;gBACrC,SAAS;oBACP,MAAM;oBACN,SAAS;wBAAE,IAAI;wBAAQ;oBAAS;gBAClC;YACF,OAAO;gBACL,MAAM,IAAI,MAAM,SAAS,KAAK,IAAI;YACpC;QACF,EAAE,OAAO,OAAO;YACd,SAAS;gBACP,MAAM;gBACN,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACpD;QACF,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,MAAM,eAA+B;QACnC;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,WAAW,QAAQ;QAAC,OAAO;kBACzB;;;;;;AAGP;GA9HgB;KAAA;AAgIT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}